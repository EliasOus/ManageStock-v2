// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Poste {
  GERANT
  GESTIONNAIRE
  TRAVAILLEUR
}

model Utilisateur {
  id             String       @id @default(cuid())
  nom            String
  prenom         String
  nomUtilisateur String       @unique
  motDePasse     String
  poste          Poste

  commandes      Commande[]
  receptions     Reception[]
  retours        Retour[]

  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Produit {
  id          String       @id @default(cuid())
  sku         String?       @unique
  nom         String?
  description String?
  fournisseur String?
  quantite    Int
  prix        Float?

  receptions  Reception[]

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Commande {
  id                String       @id @default(cuid())
  numeroDeCommande  String       @unique
  sku               String
  nom               String
  description       String
  fournisseur       String
  quantite          Int
  prix              Float
  dateCommande      DateTime     @default(now())

  utilisateurId     String
  utilisateur       Utilisateur  @relation(fields: [utilisateurId], references: [id])

  receptions        Reception[]
  retours           Retour[]

  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Retour {
  id              String       @id @default(cuid())
  numeroDeRetour  String       @unique
  commandeId      String
  commande        Commande     @relation(fields: [commandeId], references: [id])

  utilisateurId   String
  utilisateur     Utilisateur  @relation(fields: [utilisateurId], references: [id])

  quantite        Int
  motif           String
  statut          String       @default("EN ATTENTE")
  dateRetour      DateTime     @default(now())

  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Reception {
  id            String       @id @default(cuid())
  commandeId    String
  commande      Commande     @relation(fields: [commandeId], references: [id])

  utilisateurId String
  utilisateur   Utilisateur  @relation(fields: [utilisateurId], references: [id])

  produitId     String?
  produit       Produit?     @relation(fields: [produitId], references: [id])

  quantite      Int
  dateReception DateTime     @default(now())

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}